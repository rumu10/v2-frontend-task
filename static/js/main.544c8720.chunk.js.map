{"version":3,"sources":["Components/Header/header.component.jsx","Components/Person/person.component.jsx","Components/AssignedPersonList/assignedPersonList.component.jsx","Components/UploadFile/uploadFile.component.jsx","Components/AddTask/addTask.component.jsx","Components/TaskConversation/taskConv.component.jsx","HomePage/homepage.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","this","props","part","title","aria-hidden","Component","Person","AssignedPersonList","state","personList","name","id","Form","inline","FormControl","type","placeholder","map","person","key","UploadFile","AddTask","ProgressBar","now","TaskConversation","HomePage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.544c8720.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nimport './header.style.scss';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-dark header_bar\">\r\n                    {this.props.part == \"first\" ?\r\n                        <div>\r\n                            {/* <Image src=\"./Asset/img.jpg/171x180\" roundedCircle /> */}\r\n                            <a className=\"navbar-brand part_1\">Sudipta</a>\r\n                            <p className=\"status\">Status Will be Here</p>\r\n                        </div>\r\n\r\n                        : this.props.part == \"second\" ?\r\n                            <div>\r\n                                <a className=\"navbar-brand part_2\">{this.props.title}</a>\r\n                                <p className=\"ap\">to Assigned Person Name <span><i className=\"fa fa-ellipsis-v detail_icon\" aria-hidden=\"true\"></i></span></p>\r\n                            </div>\r\n\r\n                        : <a className=\"navbar-brand\">{this.props.title}</a>\r\n                    }\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nclass Person extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Person\r\n","import React, { Component } from 'react'\r\nimport Header from '../Header/header.component';\r\nimport Person from '../Person/person.component';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport * as Icon from 'react-bootstrap-icons';\r\n\r\nimport './assignedpersonList.style.scss';\r\nclass AssignedPersonList extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            personList: [\r\n                {\r\n                    name: \"A\",\r\n                    id: 1\r\n                },\r\n                {\r\n                    name: \"B\",\r\n                    id: 2\r\n                }\r\n            ]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"person_list\">\r\n                <Header part=\"first\" />\r\n                <div className=\"\">\r\n                    {/* <div className=\"grid_icon\">\r\n                        <Icon.Grid />\r\n                    </div> */}\r\n                    <div className=\"search\">\r\n                        <Form inline>\r\n                            <FormControl type=\"text\" placeholder=\"Search..\" className=\"mr-sm-2\" />\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"list\">\r\n                    {this.state.personList.map(person => (\r\n                        <Person\r\n                            person={person}\r\n                            key={person.id}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignedPersonList;\r\n","import React, { Component } from 'react';\r\n\r\nimport './uploadFile.style.scss';\r\n\r\nclass UploadFile extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"upload\">\r\n                <h6>Upload Attachment</h6>\r\n                <div className=\"up_box\">\r\n                    <div className=\"text-center\">Drop your Ataachment here or Click to Upload</div>\r\n                    <i className=\"fa fa-cloud-upload up_icon\" aria-hidden=\"true\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UploadFile;\r\n","import React, { Component } from 'react';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport Header from '../Header/header.component';\r\nimport UploadFile from '../UploadFile/uploadFile.component';\r\n\r\nimport './addTask.style.scss';\r\n\r\nclass AddTask extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        const now = 100;\r\n        return (\r\n            <div>\r\n                <Header title=\"Add New Task\" part=\"second\" />\r\n                <div className=\"task_details\">\r\n                    <h6>Task Name</h6>\r\n                    <div className=\"task_name\">\r\n                        <i className=\"fa fa-pencil-square-o task_icon\"></i><span className=\"task_des\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text.</span>\r\n                    </div>\r\n                    <div className=\"row time_details\">\r\n                        <div className=\"col-4 date\">\r\n                            <h6>Date</h6>\r\n                            <div className=\"detail_col\">\r\n                                <i className=\"fa fa-calendar-o task_icon\"></i><span className=\"value\">Sun, Sep 26, 2019</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-4 time\">\r\n                            <h6>Time</h6>\r\n                            <div className=\"detail_col\">\r\n                                <i className=\"fa fa-clock-o task_icon\"></i><span className=\"value\">8:10 AM</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-4 reminder\">\r\n                            <h6>Reminder</h6>\r\n                            <div className=\"detail_col\">\r\n                                <i className=\"fa fa-bell-o task_icon\"></i><span className=\"value\">On Time</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ProgressBar now={now} className=\"pg\" />\r\n                    <p className=\"text-center pbar\">{`${now}% complete`}</p>\r\n                    <div className=\"subtask\">\r\n                        <div className=\"st\"><i className=\"fa fa-check-square\" aria-hidden=\"true\"></i> <span className=\"value\"> Subtask 1</span></div>\r\n                        <div className=\"cross_icon\"><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div>\r\n                    </div>\r\n                    <div className=\"subtask2\">\r\n                        <div className=\"st2\"><i className=\"fa fa-check-square\" aria-hidden=\"true\"></i> <span className=\"value\"> Subtask 2</span></div>\r\n                        <div className=\"cross_icon2\"><i className=\"fa fa-times\" aria-hidden=\"true\"></i></div>\r\n                    </div>\r\n                    <div className=\"add_task\">\r\n                        <div className=\"text-center text-success\"> <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Subtask</div>\r\n                    </div>\r\n                    <UploadFile />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <button className=\"btn btn-light light\">Cancel</button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <button type=\"button\" className=\"btn btn-dark dark\">Update</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTask;\r\n","import React, { Component } from 'react'\r\nimport Header from '../Header/header.component';\r\n\r\nimport './taskConv.style.scss';\r\n\r\nclass TaskConversation extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header title=\"Task Conversation\" part=\"third\" />\r\n                <div className=\" mssg\">\r\n                    <i className=\"fa fa-commenting-o\" aria-hidden=\"true\"></i>\r\n                </div>\r\n                <div className=\"write_text\">\r\n                    <input className=\"form form-control input-field\" type=\"text\" placeholder=\"Write your message...\" />\r\n                    <span className=\"fa fa-paperclip icon\" aria-hidden=\"true\"></span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskConversation;\r\n","import React from 'react';\r\nimport './homepage.style.scss'\r\nimport AssignedPersonList from '../Components/AssignedPersonList/assignedPersonList.component';\r\nimport AddTask from '../Components/AddTask/addTask.component';\r\nimport TaskConversation from '../Components/TaskConversation/taskConv.component';\r\n\r\nconst HomePage = () => (\r\n    <div className=\"container-fluid\">\r\n        <div className='row homepage'>\r\n            <div className=\"col-md-3 first\">\r\n                <AssignedPersonList />\r\n            </div>\r\n            <div className=\"col-md-6 second\">\r\n                <AddTask />\r\n            </div>\r\n            <div className=\"col-md-3 third\">\r\n                <TaskConversation />\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n);\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react'\nimport HomePage from './HomePage/homepage.component';\nimport './App.scss';\n\nexport class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HomePage/>\n      </div>\n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}